angular.module("ng-gulp.heat",["ui.bootstrap-slider"]).config(["$routeProvider",function(t){"use strict";t.when("/heat",{controller:"HeatCtrl",templateUrl:"heat/view/heat.html"})}]),angular.module("ng-gulp.heat").service("HeatService",["$http",function(t){"use strict";var e="/services";this.toFahrenheit=function(o){return t.get(e+"/c2f/"+o)},this.toCelsius=function(o){return t.get(e+"/f2c/"+o)}}]),angular.module("ng-gulp.customer",["ui.grid","ngDialog","ui.grid.resizeColumns"]).config(["ngDialogProvider","$routeProvider",function(t,e){"use strict";t.setDefaults({className:"panel panel-info",plain:!0,showClose:!0,closeByDocument:!0,closeByEscape:!0}),e.when("/customer",{controller:"CustomerCtrl",templateUrl:"customer/view/customer.html"}),e.when("/customer/:customerId",{controller:"CustomerEditCtrl",templateUrl:"customer/view/customer-edit.html"})}]),angular.module("ng-gulp.customer").service("CustomerService",["$http",function(t){"use strict";var e="/services/customer";this.getCustomers=function(){return t.get(e)},this.getCustomer=function(o){return t.get(e+"/"+o)},this.insertCustomer=function(o){return t.post(e,o)},this.updateCustomer=function(o){return t.put(e+"/"+o.id,o)},this.save=function(t){var e=t.id?this.updateCustomer:this.insertCustomer;return e(t)},this.deleteCustomer=function(o){return t.delete(e+"/"+o)}}]),angular.module("ng-gulp.customer").controller("CustomerEditCtrl",["$scope","$location","$routeParams","CustomerService","ngDialog",function(t,e,o,s,a){"use strict";function l(){n(o.customerId)}function n(o){"new"===o?t.customer={}:s.getCustomer(o).success(function(e){t.customer=e}).error(function(){e.path("/customer")})}l(),t.back=function(){e.path("/customer")},t.updateCustomer=function(){var o=t.customer;s.save(o).success(function(){e.path("/customer"),t.status="Updated Customer! Refreshing customer list."}).error(function(e){t.status="Unable to update customer: "+e.message})},t.delete=function(){var e=t.customer,o=a.open({template:"customer/view/confirm.html",className:"ngdialog-theme-default",plain:!1,scope:t});o.closePromise.then(function(o){"Yes"===o.value&&t.deleteCustomer(e.id)})},t.deleteCustomer=function(o){s.deleteCustomer(o).success(function(){t.status="Deleted Customer! Refreshing customer list.",e.path("/customer")}).error(function(e){t.status="Unable to delete customer: "+e.message})}}]),angular.module("ng-gulp.customer").controller("CustomerCtrl",["$scope","$location","CustomerService",function(t,e,o){"use strict";function s(){a(),t.columns=[{field:"id",width:"10%",maxWidth:200},{field:"name"},{field:"age",width:"20%",maxWidth:200},{name:"Action",cellTemplate:'<button class="btn btn-primary" ng-click="grid.appScope.edit(this)"><i class="fa fa-pencil"></i></button>',width:"20%",maxWidth:200}],t.gridOpts={enableSorting:!0,enableColumnResizing:!0,columnDefs:t.columns,onRegisterApi:function(e){t.gridApi=e},rowIdentity:function(t){return t.id},getRowIdentity:function(t){return t.id}}}function a(){o.getCustomers().success(function(e){t.gridOpts.data=e}).error(function(e){t.status="Unable to load customer data: "+e.message})}s(),t.edit=function(t){var o=t.$parent.$parent.row.entity;e.path("/customer/"+o.id)}}]),angular.module("ng-gulp.todo",[]).config(["$routeProvider",function(t){"use strict";t.when("/todo",{controller:"TodoCtrl",templateUrl:"todo/view/todo.html"})}]),angular.module("ng-gulp.todo").controller("TodoCtrl",["$scope","$window",function(t,e){"use strict";t.todos=JSON.parse(e.localStorage.getItem("todos")||"[]"),t.$watch("todos",function(o,s){o!==s&&e.localStorage.setItem("todos",JSON.stringify(angular.copy(t.todos)))},!0),t.add=function(){var o={label:t.label,isDone:!1};t.todos.push(o),e.localStorage.setItem("todos",JSON.stringify(angular.copy(t.todos))),t.label=""},t.check=function(){this.todo.isDone=!this.todo.isDone}}]),angular.module("ng-gulp.home",[]),angular.module("ng-gulp.home").controller("HomeCtrl",["$scope",function(t){"use strict";t.greeting="Welcome!"}]),angular.module("ng-gulp.heat").controller("HeatCtrl",["$scope","HeatService",function(t,e){"use strict";function o(){t.defaultValue={celsius:0,fahrenheit:0},t.testOptions={min:-273,step:1,max:273,value:0,tooltip:"show"},t.heat=t.defaultValue}o(),t.f2c=function(){e.toCelsius(t.heat.fahrenheit).success(function(e){t.heat=e}).error(function(e){t.messsage=e,t.heat=t.defaultValue})},t.c2f=function(){e.toFahrenheit(t.heat.celsius).success(function(e){t.heat=e}).error(function(e){t.messsage=e,t.heat=t.defaultValue})}}]),angular.module("ng-gulp",["ngRoute","ngResource","ng-gulp.home","ng-gulp.todo","ng-gulp.customer","ng-gulp.heat"]).config(["$routeProvider",function(t){"use strict";t.when("/home",{controller:"HomeCtrl",templateUrl:"home/home.html"}),t.otherwise({redirectTo:"/home"})}]),function(t){try{t=angular.module("ng-gulp")}catch(e){t=angular.module("ng-gulp",[])}t.run(["$templateCache",function(t){t.put("home/home.html",'<h3>Home</h3><dl><dt><a href="#/todo" class="btn btn-primary"><i class="fa fa-bars"></i> TODO</a></dt><dd>A Simple TODO application to demo the AngularJS</dd></dl><dl><dt><a href="#/heat" class="btn btn-primary"><i class="fa fa-refresh fa-spin"></i> Temperature Conversion Utility</a></dt><dd>A Simple module to show how to make server call for non persistance service calls</dd></dl><dl><dt><a href="#/customer" class="btn btn-primary"><i class="fa fa-user"></i> Customer</a></dt><dd>A Simple module to show how to do the CRUD with Angular JS</dd></dl><dl><dt><a href="https://github.com/reflexdemon/ng-gulp" class="btn btn-primary" target="_blank"><i class="fa fa-github"></i> Github Source</a></dt><dd>If you liked this project, here is the orginal source code. Please feel free to fork the project.</dd></dl>')}])}(),function(t){try{t=angular.module("ng-gulp")}catch(e){t=angular.module("ng-gulp",[])}t.run(["$templateCache",function(t){t.put("customer/view/confirm.html",'<div class="panel-heading"><h3 class="panel-title">Warning</h3></div><div class="panel-body">You are about to delete a record. Are you sure?<div class="pull-right"><button value="No" ng-click="closeThisDialog(\'No\')" class="btn btn-danger">No</button> <button value="Yes" ng-click="closeThisDialog(\'Yes\')" class="btn btn-success">Yes</button></div></div>')}])}(),function(t){try{t=angular.module("ng-gulp")}catch(e){t=angular.module("ng-gulp",[])}t.run(["$templateCache",function(t){t.put("customer/view/customer-edit.html",'<h3>Customers</h3><div ng-if="status" class="alert alert-info alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button> <strong>Message:</strong>{{status}}</div><form><div class="form-group"><label for="Id">Id</label><input class="form-control" placeholder="ID" ng-model="customer.id" readonly></div><div class="form-group"><label for="name">Name</label><input class="form-control" id="name" placeholder="Name" ng-model="customer.name"></div><div class="form-group"><label for="age">Age</label><input class="form-control" id="age" placeholder="Age" ng-model="customer.age"></div><button class="btn btn-default" ng-click="back()"><i class="fa fa-undo"></i> Cancel</button> <button class="btn btn-primary" ng-click="updateCustomer()"><i class="fa fa-floppy-o"></i> Save</button> <button class="btn btn-danger" ng-if="customer.id" ng-click="delete()"><i class="fa fa-trash-o"></i> Delete</button></form>')}])}(),function(t){try{t=angular.module("ng-gulp")}catch(e){t=angular.module("ng-gulp",[])}t.run(["$templateCache",function(t){t.put("customer/view/customer.html",'<h3>Customers</h3><a href="#/home" class="btn btn-primary"><i class="fa fa-home"></i> Home</a> <a href="#/customer/new" class="btn btn-success"><i class="fa fa-user-plus"></i> Add</a><div ng-if="status" class="alert alert-info alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button> <strong>Message:</strong>{{status}}</div><div id="grid1" ui-grid="gridOpts" class="grid myGrid" ui-grid-resize-columns></div>')}])}(),function(t){try{t=angular.module("ng-gulp")}catch(e){t=angular.module("ng-gulp",[])}t.run(["$templateCache",function(t){t.put("heat/view/heat.html",'<h3>Temperature Conversion Utility</h3><a href="#/home" class="btn btn-primary"><i class="fa fa-home"></i> Home</a><div ng-if="status" class="alert alert-info alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button> <strong>Message:</strong>{{status}}</div><div class="row"><div class="well"><form class="form-horizontal"><div class="form-group"><label for="fahrenheit">Fahrenheit</label><slider ng-model="heat.fahrenheit" min="testOptions.min" step="testOptions.step" max="testOptions.max" value="testOptions.value" change="f2c()"></slider><label>{{heat.fahrenheit}}</label><button type="button" class="btn btn-default" ng-click="f2c()">Fahrenheit to Celsius</button></div><div class="form-group"><label for="celsius">Celsius</label><slider ng-model="heat.celsius" min="testOptions.min" step="testOptions.step" max="testOptions.max" value="testOptions.value" change="c2f()"></slider><label>{{heat.celsius}}</label><button type="button" class="btn btn-default" ng-click="c2f()">Celsius to Fahrenheit</button></div></form></div></div>')}])}(),function(t){try{t=angular.module("ng-gulp")}catch(e){t=angular.module("ng-gulp",[])}t.run(["$templateCache",function(t){t.put("todo/view/todo.html",'<h3>Todo</h3><a href="#/home" class="btn btn-primary"><i class="fa fa-home"></i> Home</a><ul class="todo-list"><li class="todo-item" ng-repeat="todo in todos" ng-class="{\'todo-done\': todo.isDone}"><label><input type="checkbox" ng-click="check()" ng-model="todo.isDone">&nbsp;{{todo.label}}</label></li><li class="todo-item"><form ng-submit="add()"><input placeholder="New item..." ng-model="label"> <button type="submit" ng-disabled="posting || !label">Add</button></form></li></ul>')}])}();